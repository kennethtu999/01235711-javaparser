// ast-parser/build.gradle
plugins {
    id 'application' // Only this project needs to be runnable
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

// Java 17 is required for Spring Boot 3
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// 添加編譯參數以支持參數名稱反射
compileJava {
    options.compilerArgs += ['-parameters']
}

compileTestJava {
    options.compilerArgs += ['-parameters']
}

configurations {
    gradleApi.extendsFrom implementation
}

dependencies {
    
    // Spring Boot Starter Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    // SpringDoc OpenAPI for Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'
    
    // Apache Commons Lang for String manipulation
    implementation 'org.apache.commons:commons-lang3:3.15.0'

    // Eclipse JDT Core for AST parsing
    implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.42.0'

    // Jackson for JSON serialization (Spring Boot 3 manages this version)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Neo4j Java Driver for graph database connectivity
    implementation 'org.neo4j.driver:neo4j-java-driver:5.20.0'
     
    // Spring Data Neo4j for graph database operations
    implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'


    // Spring AI for AI integration
    implementation platform("org.springframework.ai:spring-ai-bom:1.0.3")
    implementation 'org.springframework.ai:spring-ai-starter-model-ollama:1.0.3'


    // Logging with logback-classic as SLF4J backend (Spring Boot 3 manages this version)
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.slf4j:jul-to-slf4j'
    implementation 'ch.qos.logback:logback-classic'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    
    // Gradle Tooling API for testing
    implementation gradleApi()

    // Environment Java library for .env file support
    implementation 'io.github.cdimascio:dotenv-java:3.2.0'

    // Test dependencies
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
    
    // Spring Boot Starter Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

application {
    mainClass = 'kai.javaparser.AstParserSpringBootApp'
}

tasks.jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    zip64 = true

    manifest {
        attributes 'Main-Class': 'kai.javaparser.AstParserSpringBootApp'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.test {
    useJUnitPlatform()
    
    // Configure test logging
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
        showStandardStreams = true
        showCauses = true
        showStackTraces = true
    }
}

// Configure Spring Boot
springBoot {
    buildInfo()
}